curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-06-05/bin/linux/amd64/kubectl
dmesg | head -1
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
 apt install nodejs
 
 
INPUT PATH:
{"instance-id":"$.detail.instance-id", "state":"$.detail.state", "time":"$.time", "region":"$.region", "account":"$.account"}

INPUT TEMPLATE:
"At <time>, Status of your Ec2 instance <instance-id> in the AWS Region <region> has changed to <state>."


AKIAUX76ETPXGFA5BGPE acces id 
cEPHOMmDpn8Hsc7aPzm0HH1vLJR+e5dHgIxYj5h0
--------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------
referd links: https://www.fosstechnix.com/how-to-create-eks-cluster-in-aws-2-steps/

https://medium.com/codex/create-kubernetes-cluster-on-aws-eks-6ced4c488e62#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImNhMDA2MjBjNWFhN2JlOGNkMDNhNmYzYzY4NDA2ZTQ1ZTkzYjNjYWIiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJuYmYiOjE2NDI3NDQwNTEsImF1ZCI6IjIxNjI5NjAzNTgzNC1rMWs2cWUwNjBzMnRwMmEyamFtNGxqZGNtczAwc3R0Zy5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExMjc4NDY4ODc4NjAxNzQ3NTI1MCIsImVtYWlsIjoic2FzZW5kZXIxMjNAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF6cCI6IjIxNjI5NjAzNTgzNC1rMWs2cWUwNjBzMnRwMmEyamFtNGxqZGNtczAwc3R0Zy5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsIm5hbWUiOiJDaGlsa3VyaSBTYXNlbmRlciBSZWRkeSIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQU9oMTRHamdjNVQzM1JsWW1ZZ2dhR1lNQkZsaUJDc2RfX1drYUFTU1hKWmVWQT1zOTYtYyIsImdpdmVuX25hbWUiOiJDaGlsa3VyaSBTYXNlbmRlciIsImZhbWlseV9uYW1lIjoiUmVkZHkiLCJpYXQiOjE2NDI3NDQzNTEsImV4cCI6MTY0Mjc0Nzk1MSwianRpIjoiMTg3MGIzYzQxYjA4MDk0NGFlMTU5ODRkMDdiZmMzZDdiOTZlZWRhZCJ9.XZSwRysDo9xyZlSkiACG7aMgf6UWtJYtLc-H3rfbSrEiJmB8WvISNHqayZDtjLFMCZ0zmECkb4BXo43GNnHSGRj09o9EY7iWIekEIi0uDqjW9A-FwCe6ej9e0Yy7YUWYW_PmN11ry4t1j7aha4UgzVCvYVnxuktatEW-47Aj6eZhDf0VWUFRTCI81w7F4wnoXkjS3clWWrEzJ_girj5K8isRl3w_HRKw740Sg8Y-LhF_0wAMMjOsK-qI-gulIUlj3Qowtw5br22HR8ilkbMRbgDIX6b8VYiOl8HVRKECSL3QPgq4VZTiQcSmvgUX0yD8jN6ljAW5lU5rj5h5WdcKlw

https://github.com/RekhuGopal/PythonHacks/blob/main/AWSBoto3Hacks/EFK-Stack-On-AWS-EKS/EKF_Commands.json

https://logz.io/blog/amazon-eks-cluster/
------------------------------------------------------------------------------------------
helm installation:
https://devopscube.com/install-configure-helm-kubernetes/
---------------------------------------------------------------------------------------------
   
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
	alb.ingress.kubernetes.io/subnets: subnet-083364fe76c074a89, subnet-0a036bf06979f3b15

   
   aws eks update-kubeconfig \
    --region us-east-1 \
    --name eks-cluster \
    --role-arn arn:aws:iam::<aws_account_id>:role/<role_name>
  
   
   
   aws eks --region us-east-1 update-kubeconfig --name demo
   
  ==========================================================================================================================================
cluster creation formula:
=========================  
   
aws eks create-cluster \
>    --region us-east-1 \
>    --name eks-cluster \
>    --kubernetes-version 1.21 \
>    --role-arn arn:aws:iam::326413622254:role/demo-cluster \
>    --resources-vpc-config subnetIds=subnet-0a036bf06979f3b15,subnet-0d2683a99fb6624b9,subnet-0122a04eed942d886,subnet-083364fe76c074a89,securityGroupIds=sg-0fb735b3673fdd2d5




eksctl create iamserviceaccount \
    --region us-east-1 \
    --name alb-ingress-controller \
    --namespace kube-system \
    --cluster eks-cluster \
    --attach-policy-arn arn:aws:iam::326413622254:policy/ALBIngressControllerIAMPolicy \
    --override-existing-serviceaccounts \
    --approve
	
	
	
eksctl create iamserviceaccount \
       --cluster=attractive-gopher \
       --namespace=kube-system \
       --name=alb-ingress-controller \
       --attach-policy-arn=$PolicyARN \
       --override-existing-serviceaccounts \
       --approve

arn:aws:iam::326413622254:policy/ALBIngressControllerIAMPolicy	   
	
	
arn:aws:iam::326413622254:policy/alb-ingress	
	
	
aws iam create-policy \
    --policy-name alb-ingress \
    --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/master/docs/examples/iam-policy.json	
	
eksctl utils associate-iam-oidc-provider \
    --region us-east-1 \
    --cluster eks-cluster \
    --approve	
	
	
	
  525  kubectl logs -f $(kubectl get po -n kube-system | egrep -o 'alb-ingress-controller-7b4cdcc5b-m6rvg') -n kube-system

aws iam attach-role-policy \
  --role-name demo-cluster \
  --policy-arn arn:aws:iam::326413622254:policy/alb-ingress  
  
  
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    alb.ingress.kubernetes.io/subnets: subnet-083364fe76c074a89, subnet-0a036bf06979f3b15
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#    alb.ingress.kubernetes.io/healthcheck-path: /usermgmt/health-status
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'   
  
  
arn:aws:iam::326413622254:policy/ALBIngressControllerIAMPolicy

curl -o iam_policy.json  https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
aws iam create-policy --policy-name ALBIngressControllerIAMPolicy --policy-document file://iam_policy.json





====================================================================================================================================
 eksctl commnd line through create iam service account
 -----------------------------------------------------
eksctl create iamserviceaccount \
      --cluster=eks-cluster \
      --namespace=kube-system \
      --name=aws-load-balancer-controller \
      --attach-policy-arn=arn:aws:iam::326413622254:policy/AWSLoadIAMPolicy \
      --override-existing-serviceaccounts \
      --approve
	  
eksctl-eks-cluster-addon-iamserviceaccount-k-Role1-189DHRWZAP60K

aws iam attach-role-policy \
  --role-name eksctl-eks-cluster-addon-iamserviceaccount-k-Role1-189DHRWZAP60K \
  --policy-arn arn:aws:iam::326413622254:policy/AWSLoadIAMPolicy   
========================================================================================================================================   
   
   
   
   
   
eksctl delete cluster --name=eks-cluster   
   
 eksctl delete cluster --name=my-cluster   
   
   
   
eksctl create cluster \
--name test-cluster \
--version 1.21 \
--region us-east-1 \
--nodegroup-name k8s-nodes \
--node-type t2.micro \
--nodes 2   



arn:aws:iam::314143977634:user/eks


aws eks create-cluster \
>    --region us-east-1 \
>    --name eks-cluster \
>    --kubernetes-version 1.21 \
>    --role-arn arn:aws:iam::326413622254:role/demo-cluster \
>    --resources-vpc-config subnetIds=subnet-0a036bf06979f3b15,subnet-0d2683a99fb6624b9,subnet-0122a04eed942d886,subnet-083364fe76c074a89,securityGroupIds=sg-0fb735b3673fdd2d5


eksctl create cluster \
--name my-cluster \
--version 1.21 \
--region us-east-1 \
--resources-vpc-config subnetIds=subnet-0aa73a4a64c6121a8,subnet-05759105d0536e21f,subnet-0d11b8fbdb5b4b998,securityGroupIds=sg-06bfb876fee30651a


vpc-020571e430369cf00

subnet-0aa73a4a64c6121a8 private
subnet-05759105d0536e21f private
subnet-0d11b8fbdb5b4b998 public

sg-06bfb876fee30651a

arn:aws:iam::314143977634:role/ec2-cluster








-------------------------->>>>>>>>>>>>>>>>>>.._______--------------------------------------

https://medium.com/avmconsulting-blog/deploying-a-kubernetes-cluster-with-amazon-eks-9455e7e7828

-----------------------------------------------------------------------------------------------------------

--------------------------------------------------------
eks cluster overhanded to the another users :
---------------------------------------------
1)
at every time it is not best practise to acces the eks cluster through admini credentials
2)
in thise senario we need to create a normal user with out any ermissions 
3)
then next create a policys in iam services in aws in that policy contains the only eks permission if we want referd the amazon document 
4)
afetr create a group at iam then add the policys which are created previously
5)
then add the user which we created befor without any permissions add that user to groups
6)
and go to the cli prompt which were we crated eks cluster prevoulsy with admin privillages
afetr excute thise commnds
7)
create role and rolebinding for user
8)
and modified the user [ex:free ] arn details in the configmap in kubernetes cluster
9)
create the role and cluster rolebinding for free user just copy the below url and see there clusetrrole file and rolebinding file
10)
and copy the code and create a file in kubernets cluster no need to edit that file 
11)
apply the file by using kubectl commnd
12)
edit the config mp by using thise commnd 
13)
kubectl edit configmap aws-auth -n kube-system
14)
by using thise commnd we can configured the user detalis
 
-------------------[aws configure --profile free]

aws eks update-kubeconfig --region us-east-1 --name my-cluster --profile free

by using above commnd update the kubeconfig with our role name or username in our ec2 instance

by using thise commnd we can edit aws-auth config file [kubectl edit configmap aws-auth -n kube-system]

by using thise commnd configure user accses to thre ec2 instance
 
aws configure --profile free

------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------


links:

https://www.youtube.com/watch?v=BuBDYFet0hI

https://docs.aws.amazon.com/eks/latest/userguide/security_iam_id-based-policy-examples.html#policy_example3

https://aws.amazon.com/premiumsupport/knowledge-center/eks-kubernetes-object-access-error/

https://www.agilepartner.net/en/adding-users-to-your-eks-cluster/

-----------------------------------------------------------------------------------------------------------------------------------------------------------
promethuses alaerts :
https://devopscube.com/alert-manager-kubernetes-guide/

-------------------------------------------------------
https://medium.com/trendyol-tech/alert-and-monitoring-with-grafana-b659c433bb51

https://kifarunix.com/configure-grafana-email-alerting/

https://devopscube.com/setup-grafana-kubernetes/

https://devopscube.com/setup-grafana-kubernetes/


--------------------------------------------------------------------------
trobleshooting in kubernets :
https://learnk8s.io/troubleshooting-deployments#:~:text=There%20are%20four%20useful%20commands%20to%20troubleshoot%20Pods%3A,definition%20of%20the%20Pod%20as%20stored%20in%20Kubernetes.